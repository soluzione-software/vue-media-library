{"version":3,"file":"index.js","sources":["../src/components/FilePicker/ButtonFilePicker.vue","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../node_modules/vue-runtime-helpers/dist/inject-style/browser.mjs","../src/components/FilePicker/DragFilePicker.vue","../src/components/FilePicker/index.vue","../src/components/Modal.vue","../src/components/ImageCropper.vue","../src/components/Icon.vue","../src/mixins/isDownloadable.js","../src/mixins/isEditable.js","../src/mixins/isViewable.js","../src/mixins/usesPortal.js","../src/Media.js","../src/components/Views/ImageItem.vue","../src/components/Views/Column.vue","../src/components/Views/Columns.vue","../src/components/Views/Grid.vue","../src/components/Views/Single.vue","../src/components/Views/List.vue","../src/components/MediaLibrary.vue","../src/index.js"],"sourcesContent":["<template>\n    <div>\n        <b-button variant=\"primary\" @click.prevent=\"$refs.input.click()\">Select a file</b-button>\n        <input ref=\"input\" type=\"file\" :accept=\"accept\" @change=\"() => {$emit('change', $refs.input.files)}\"/>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"ButtonFilePicker\",\n        props: {\n            accept: {\n                type: String,\n                required: true,\n            }\n        },\n    }\n</script>\n\n<style scoped>\n    input{\n        display: none;\n    }\n</style>\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","const isOldIE = typeof navigator !== 'undefined' &&\r\n    /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\r\nfunction createInjector(context) {\r\n    return (id, style) => addStyle(id, style);\r\n}\r\nlet HEAD;\r\nconst styles = {};\r\nfunction addStyle(id, css) {\r\n    const group = isOldIE ? css.media || 'default' : id;\r\n    const style = styles[group] || (styles[group] = { ids: new Set(), styles: [] });\r\n    if (!style.ids.has(id)) {\r\n        style.ids.add(id);\r\n        let code = css.source;\r\n        if (css.map) {\r\n            // https://developer.chrome.com/devtools/docs/javascript-debugging\r\n            // this makes source maps inside style tags work properly in Chrome\r\n            code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */';\r\n            // http://stackoverflow.com/a/26603875\r\n            code +=\r\n                '\\n/*# sourceMappingURL=data:application/json;base64,' +\r\n                    btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\r\n                    ' */';\r\n        }\r\n        if (!style.element) {\r\n            style.element = document.createElement('style');\r\n            style.element.type = 'text/css';\r\n            if (css.media)\r\n                style.element.setAttribute('media', css.media);\r\n            if (HEAD === undefined) {\r\n                HEAD = document.head || document.getElementsByTagName('head')[0];\r\n            }\r\n            HEAD.appendChild(style.element);\r\n        }\r\n        if ('styleSheet' in style.element) {\r\n            style.styles.push(code);\r\n            style.element.styleSheet.cssText = style.styles\r\n                .filter(Boolean)\r\n                .join('\\n');\r\n        }\r\n        else {\r\n            const index = style.ids.size - 1;\r\n            const textNode = document.createTextNode(code);\r\n            const nodes = style.element.childNodes;\r\n            if (nodes[index])\r\n                style.element.removeChild(nodes[index]);\r\n            if (nodes.length)\r\n                style.element.insertBefore(textNode, nodes[index]);\r\n            else\r\n                style.element.appendChild(textNode);\r\n        }\r\n    }\r\n}\n\nexport default createInjector;\n//# sourceMappingURL=browser.mjs.map\n","<template>\n    <div>\n        <p @click=\"$refs.input.click()\">Drag your files here or click in this area.</p>\n        <input ref=\"input\" type=\"file\" :accept=\"accept\" @change=\"() => {$emit('change', $refs.input.files)}\">\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"DragFilePicker\",\n        props: {\n            accept: {\n                type: String,\n                required: true,\n            }\n        },\n    }\n</script>\n\n<style scoped>\n    p{\n        width: 100%;\n        height: 100%;\n        text-align: center;\n        font-size: 2em;\n        line-height: 170px;\n        background-color: #cecece;\n        border: 3px dashed gray;\n        color: #4a4a4a;\n        cursor: pointer;\n    }\n    p:hover{\n        color: #242424;\n    }\n    input{\n        display: none;\n    }\n</style>","<template>\n    <div>\n        <component\n                :is=\"`${mode}-file-picker`\"\n                :accept=\"acceptFiles\"\n                @change=\"onChange\"/>\n        <div class=\"mt-1\">\n            <slot name=\"help\"/>\n        </div>\n    </div>\n</template>\n\n<script>\n    import ButtonFilePicker from \"./ButtonFilePicker.vue\";\n    import DragFilePicker from \"./DragFilePicker.vue\";\n\n    export default {\n        name: \"FilePicker\",\n        components: {ButtonFilePicker, DragFilePicker},\n        props: {\n            accept: {\n                type: Array,\n                required: true,\n            },\n            mode: {\n                type: String,\n                default: 'button',\n            },\n        },\n        methods: {\n            onChange(files){\n                let file = files[0];\n                if (!file){\n                    console.error('File type not accepted', file);\n                    return;\n                }\n\n                this.$emit('selected', file);\n            },\n            /**\n             *\n             * @param {File} file\n             * @returns {File|null}\n             */\n            filter(file){\n                return this.accept.indexOf(file.type) >= 0 || this.accept.indexOf('*') >= 0 ? file : null;\n            }\n        },\n        computed: {\n            acceptFiles(){\n                return this.accept.join(',');\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <b-modal\n            :id=\"modalId\"\n            :size=\"size\"\n            :static=\"true\"\n            :lazy=\"true\"\n            :ok-title=\"okTitle\"\n            @ok=\"(args) => {$emit('ok', args)}\"\n    >\n        <slot></slot>\n    </b-modal>\n</template>\n\n<script>\n    export default {\n        name: \"Modal\",\n        props: {\n            modalId: {\n                type: String,\n                default(){\n                    return Math.random().toString(36).substring(3);\n                }\n            },\n            size: {\n                type: String,\n            },\n            okTitle: {\n                type: String\n            }\n        },\n        methods: {\n            show(){\n                this.$bvModal.show(this.modalId)\n            },\n            hide(){\n                this.$bvModal.hide(this.modalId)\n            },\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <cropper\n            ref=\"cropper\"\n            classname=\"v-cropper\"\n            :src=\"image\"\n            :stencil-props=\"stencilProps\"\n            :restrictions=\"restrictions\"\n    />\n</template>\n\n<script>\n    import { Cropper } from 'vue-advanced-cropper'\n\n    export default {\n        name: \"ImageCropper\",\n        components: {Cropper},\n        props: {\n            image: {\n                type: String,\n                required: true,\n            },\n            aspectRatio: {\n                type: Number\n            },\n            minWidth: {\n                type: Number\n            },\n            maxWidth: {\n                type: Number\n            },\n            minHeight: {\n                type: Number\n            },\n            maxHeight: {\n                type: Number\n            },\n        },\n        data(){\n            return {\n            }\n        },\n        methods: {\n            /**\n             *\n             * @param {BlobCallback} callback\n             * @param {string?} type\n             * @param {number?} quality\n             */\n            getResult(callback, type, quality){\n                this.$refs.cropper.getResult().canvas.toBlob(callback, type, quality);\n            },\n        },\n        computed: {\n            stencilProps(){\n                return {\n                    aspectRatio: this.aspectRatio,\n                }\n            },\n            restrictions(){\n                if (this.minWidth || this.minHeight || this.maxWidth || this.maxHeight){\n                    return () => {\n                        return {\n                            minWidth: this.minWidth,\n                            minHeight: this.minHeight,\n                            maxWidth: this.maxWidth,\n                            maxHeight: this.maxHeight,\n                        }\n                    }\n                }\n                return undefined;\n            },\n        }\n    }\n</script>\n\n<style scoped>\n    .v-cropper {\n        max-height: 80vh;\n    }\n</style>\n","<template>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n        <path class=\"heroicon-ui\" :d=\"d\"/>\n    </svg>\n</template>\n\n<script>\n    export default {\n        name: \"Icon\",\n        props: {\n            d: {\n                type: String,\n                required: true\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>","export default {\n    props: {\n        downloadable: {\n            type: Boolean,\n            default: false\n        },\n    }\n}","export default {\n    props: {\n        editable: {\n            type: Boolean,\n            default: false\n        },\n    }\n}","export default {\n    props: {\n        viewable: {\n            type: Boolean,\n            default: false\n        },\n    }\n}","export default {\n    props: {\n        usePortal: {\n            type: Boolean,\n            default: false,\n        },\n        portalTarget: {\n            type: String,\n            default: 'modals',\n        },\n    }\n}\n","/**\n * Class which represents each library item\n *\n * @property {String} v_id Autogenerated id to use in Vue components\n */\nclass Media {\n    constructor(id, collectionName, fileName, mimeType, file, url, thumbnail) {\n        this.v_id = Math.random().toString(36).substring(3);\n        this.id = id;\n        this.collection_name = collectionName;\n        this.file_name = fileName;\n        this.mime_type = mimeType;\n        this.file = file;\n        this.url = url;\n        this.thumbnail = thumbnail;\n    }\n\n    /**\n     *\n     * @returns {Media}\n     */\n    static fromObject(obj){\n        return new Media(obj.id, obj.collection_name, obj.file_name, obj.mime_type, null, obj.url, obj.thumbnail)\n    }\n\n    /**\n     * @returns {Media}\n     */\n    clone(){\n        return new Media(this.id, this.collection_name, this.file_name, this.mime_type, this.file, this.url, this.thumbnail)\n    }\n}\n\nexport default Media\n","<template>\n    <div class=\"position-relative image-container d-flex align-items-center\">\n        <div v-if=\"squared\" class=\"spacer\"></div>\n        <img\n                class=\"image\"\n                :class=\"{'h-100': squared, 'position-absolute': squared, 't-0': squared, 'object-cover': squared}\"\n                :src=\"item.thumbnail\"\n                alt=\"\"\n        />\n\n        <div v-if=\"showProgress\" class=\"visible-overlay d-flex flex-column justify-content-center align-items-center\">\n            <div class=\"w-100 px-3\">\n                <b-progress :value=\"progressValue\" variant=\"info\" striped animated/>\n            </div>\n        </div>\n\n        <div v-else class=\"d-flex flex-column justify-content-center align-items-center\" :class=\"isMoreItem ? 'visible-overlay' : 'overlay'\">\n            <div>\n                <b-link v-if=\"isMoreItem\" class=\"more-link text-white display-4\" @click.prevent=\"$emit('more', item)\">+{{ moreCount }}</b-link>\n                <template v-else>\n                    <b-button v-if=\"viewable\" variant=\"outline-light\" class=\"mx-1\" @click=\"$emit('view', item)\">\n                        <Icon class=\"fill-current\" d=\"M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\"/>\n                    </b-button>\n\n                    <b-button v-if=\"downloadable\" variant=\"outline-light\" class=\"mx-1\" @click=\"$emit('download', item)\">\n                        <Icon class=\"fill-current\" d=\"M11 14.59V3a1 1 0 0 1 2 0v11.59l3.3-3.3a1 1 0 0 1 1.4 1.42l-5 5a1 1 0 0 1-1.4 0l-5-5a1 1 0 0 1 1.4-1.42l3.3 3.3zM3 17a1 1 0 0 1 2 0v3h14v-3a1 1 0 0 1 2 0v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-3z\"/>\n                    </b-button>\n\n                    <template v-if=\"!readonly\">\n\n                        <b-button v-if=\"editable && item.id\" variant=\"outline-light\" class=\"mx-1\" @click=\"$emit('edit', item)\">\n                            <Icon class=\"fill-current\" d=\"M6.3 12.3l10-10a1 1 0 0 1 1.4 0l4 4a1 1 0 0 1 0 1.4l-10 10a1 1 0 0 1-.7.3H7a1 1 0 0 1-1-1v-4a1 1 0 0 1 .3-.7zM8 16h2.59l9-9L17 4.41l-9 9V16zm10-2a1 1 0 0 1 2 0v6a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h6a1 1 0 0 1 0 2H4v14h14v-6z\"/>\n                        </b-button>\n\n                        <b-button variant=\"outline-light\" class=\"mx-1\" @click=\"$emit('delete', item)\">\n                            <Icon class=\"fill-current\" d=\"M8 6V4c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2h5a1 1 0 0 1 0 2h-1v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V8H3a1 1 0 1 1 0-2h5zM6 8v12h12V8H6zm8-2V4h-4v2h4zm-4 4a1 1 0 0 1 1 1v6a1 1 0 0 1-2 0v-6a1 1 0 0 1 1-1zm4 0a1 1 0 0 1 1 1v6a1 1 0 0 1-2 0v-6a1 1 0 0 1 1-1z\"/>\n                        </b-button>\n\n                    </template>\n                </template>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import Icon from \"../Icon.vue\";\n    import {isDownloadable, isEditable, isViewable} from \"../../mixins\";\n    import Media from \"../../Media\";\n    export default {\n        name: \"ImageItem\",\n        components: {Icon},\n        mixins: [isDownloadable, isEditable, isViewable],\n        props: {\n            item: {\n                type: Object,\n                required: true\n            },\n            readonly: {\n                type: Boolean,\n                default: false,\n            },\n            squared: {\n                type: Boolean,\n                default: false,\n            },\n            moreCount: {\n                type: Number\n            },\n            moreItem: {\n                type: Media,\n            },\n            showProgress: {\n                type: Boolean,\n                default: false\n            },\n            progressValue: {\n                type: Number,\n                default: 0\n            }\n        },\n        computed: {\n            isMoreItem(){\n                return this.moreCount !== undefined && this.moreItem !== undefined && this.moreItem.v_id === this.item.v_id;\n            },\n            overlayVisible(){\n                return this.isMoreItem || this.viewable || this.downloadable || !this.readonly;\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .image {\n        vertical-align: middle;\n        width: 100%;\n        backface-visibility: hidden;\n    }\n\n    .image-container:hover .overlay {\n        opacity: 1;\n    }\n\n    .spacer{\n        padding-top: 100%;\n    }\n    .t-0 {\n        top: 0;\n    }\n    .fill-current {\n        fill: currentColor;\n    }\n    .object-cover {\n        object-fit: cover;\n    }\n\n    .image-container {\n         overflow:hidden;\n     }\n\n    .overlay,\n    .visible-overlay {\n        width:100%;\n        height:100%;\n        position:absolute;\n        overflow:hidden;\n        top:0;\n        left:0;\n        background-color:rgba(0,0,0,0.5);\n        -webkit-transition:all .4s ease-in-out;\n        transition:all .4s ease-in-out\n    }\n\n    .overlay {\n        opacity:0;\n    }\n\n    .image-container img {\n        -webkit-transition:all .4s linear;\n        transition:all .4s linear;\n    }\n\n    .image-container:hover img {\n        -ms-transform:scale(1.2);\n        -webkit-transform:scale(1.2);\n        transform:scale(1.2);\n    }\n\n    .image-container:hover .overlay {\n        opacity:1;\n        filter:alpha(opacity=100);\n    }\n\n    .more-link{\n        text-decoration: none;\n    }\n\n</style>\n","<template>\n    <div class=\"column px-1\">\n        <ImageItem\n                class=\"mt-2\"\n                v-for=\"item in items\"\n                :key=\"item.v_id\"\n                :item=\"item\"\n                :readonly=\"readonly\"\n                :viewable=\"viewable\"\n                :editable=\"editable\"\n                :downloadable=\"downloadable\"\n                :squared=\"squaredItems\"\n                :more-count=\"moreCount\"\n                :more-item=\"moreItem\"\n                :show-progress=\"progress[item.v_id] !== undefined\"\n                :progress-value=\"progress[item.v_id]\"\n                @view=\"(args) => {$emit('view', args)}\"\n                @download=\"(args) => {$emit('download', args)}\"\n                @edit=\"(args) => {$emit('edit', args)}\"\n                @delete=\"(args) => {$emit('delete', args)}\"\n                @more=\"(args) => {$emit('more', args)}\"\n        />\n    </div>\n</template>\n\n<script>\n    import ImageItem from \"./ImageItem.vue\";\n    import {isDownloadable, isEditable, isViewable} from \"../../mixins\";\n    import Media from \"../../Media\";\n\n    export default {\n        name: \"Column\",\n        components: {ImageItem},\n        mixins: [isDownloadable, isEditable, isViewable],\n        props: {\n            items: {\n                type: Array,\n                default(){\n                    return []\n                }\n            },\n            readonly: {\n                type: Boolean,\n                default: false\n            },\n            squaredItems: {\n                type: Boolean,\n                default: false,\n            },\n            moreCount: {\n                type: Number\n            },\n            moreItem: {\n                type: Media,\n            },\n            uploadingMedia: {\n                type: Array,\n                default() {\n                    return [];\n                }\n            },\n        },\n        computed: {\n            progress(){\n                let obj = {};\n\n                this.uploadingMedia.every(item => {\n                    obj[item.media.v_id] = item.progress;\n                });\n\n                return obj;\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <div class=\"d-flex flex-wrap\">\n        <column\n                :class=\"columnClasses\"\n                v-for=\"(column, i) in columns\"\n                :key=\"i\"\n                :items=\"column\"\n                :readonly=\"readonly\"\n                :viewable=\"viewable\"\n                :editable=\"editable\"\n                :downloadable=\"downloadable\"\n                :squared-items=\"squaredItems\"\n                :more-count=\"moreCount\"\n                :more-item=\"moreItem\"\n                :uploading-media=\"uploadingMedia\"\n                @view=\"(args) => {$emit('view', args)}\"\n                @download=\"(args) => {$emit('download', args)}\"\n                @edit=\"(args) => {$emit('edit', args)}\"\n                @delete=\"(args) => {$emit('delete', args)}\"\n                @more=\"(args) => {$emit('more', args)}\"\n        />\n    </div>\n</template>\n\n<script>\n    import Column from \"./Column.vue\";\n    import {isDownloadable, isEditable, isViewable} from \"../../mixins\";\n    import Media from \"../../Media\";\n\n    const defaultColumns = {\n        'xs': 1,\n        'sm': 2,\n        'md': 3,\n        'lg': 4,\n        'xl': 5\n    };\n\n    export default {\n        name: \"Columns\",\n        components: {Column},\n        mixins: [isDownloadable, isEditable, isViewable],\n        props: {\n            items: {\n                type: Array,\n                default(){\n                    return []\n                },\n            },\n            readonly: {\n                type: Boolean,\n                default: false\n            },\n            columnsCount: {\n                type: Object,\n                default(){\n                    return defaultColumns;\n                }\n            },\n            squaredItems: {\n                type: Boolean,\n                default: false,\n            },\n            moreCount: {\n                type: Number\n            },\n            moreItem: {\n                type: Media,\n            },\n            uploadingMedia: {\n                type: Array,\n                default() {\n                    return [];\n                }\n            },\n        },\n        data(){\n            return {\n                window: {\n                    width: 0,\n                    height: 0\n                },\n                breakpoints: {\n                    // https://getbootstrap.com/docs/4.0/layout/overview/#responsive-breakpoints\n                    'sm': 576,\n                    'md': 768,\n                    'lg': 992,\n                    'xl': 1200,\n                }\n            }\n        },\n        mounted() {\n\n        },\n        created() {\n            this.handleResize();\n            window.addEventListener('resize', this.handleResize);\n        },\n        destroyed() {\n            window.removeEventListener('resize', this.handleResize);\n        },\n        methods: {\n            chunk(array, chunks){\n                let res = [];\n\n                for (let i = 0; i < chunks; i++){\n                    res.push([]);\n                }\n\n                let current = 0;\n                array.forEach(item => {\n                    res[current].push(item);\n                    current = current + 1 < chunks ? current + 1 : 0;\n                });\n\n                return res;\n            },\n            handleResize() {\n                this.window.width = window.innerWidth;\n                this.window.height = window.innerHeight;\n            },\n            getColumnsCount(breakpoint){\n                return this.columnsCount[breakpoint] || defaultColumns[breakpoint];\n            },\n        },\n        computed: {\n            columns(){\n                let chunks = this.getColumnsCount(this.currentBreakpoint);\n\n                return this.chunk(this.items, chunks);\n            },\n            currentBreakpoint(){\n                let breakpoint = 'xs';\n\n                Object.entries(this.breakpoints).reverse().every(entry => {\n                    let br = entry[0];\n                    let size = entry[1];\n                    if (this.window.width >= size){\n                        breakpoint = br;\n                        return false;\n                    }\n                    return true;\n                });\n\n                return breakpoint;\n            },\n            columnClasses(){\n                let count = this.getColumnsCount(this.currentBreakpoint);\n                let w = count === 1 ? 'full' : `1/${count}`;\n                return `w-${w}`;\n            },\n        }\n    }\n</script>\n\n<style scoped>\n    .w-full {\n        width: 100%;\n    }\n\n    .w-1\\/2 {\n        width: 50%;\n    }\n\n    .w-1\\/3 {\n        width: 33.33%;\n    }\n\n    .w-1\\/4 {\n        width: 25%;\n    }\n\n    .w-1\\/5 {\n        width: 20%;\n    }\n</style>\n","<template>\n    <div>\n        <columns\n                :items=\"visibleItems\"\n                :readonly=\"readonly\"\n                :viewable=\"viewable\"\n                :editable=\"editable\"\n                :downloadable=\"downloadable\"\n                :columns-count=\"columnsCount\"\n                :squared-items=\"squaredItems\"\n                :more-count=\"moreCount\"\n                :more-item=\"visibleItems[visibleItems.length - 1]\"\n                :uploading-media=\"uploadingMedia\"\n                @view=\"(args) => {$emit('view', args)}\"\n                @download=\"(args) => {$emit('download', args)}\"\n                @edit=\"(args) => {$emit('edit', args)}\"\n                @delete=\"(args) => {$emit('delete', args)}\"\n                @more=\"onMore\"\n        />\n\n        <component :is=\"usePortal ? 'portal' : 'div'\" :to=\"portalTarget\">\n            <modal v-if=\"\" ref=\"moreModal\" size=\"xl\">\n                <columns\n                        :items=\"items\"\n                        :readonly=\"readonly\"\n                        :viewable=\"viewable\"\n                        :editable=\"editable\"\n                        :downloadable=\"downloadable\"\n                        :columns-count=\"columnsCount\"\n                        :squared-items=\"squaredItems\"\n                        :uploading-media=\"uploadingMedia\"\n                        @view=\"(args) => {$emit('view', args)}\"\n                        @download=\"(args) => {$emit('download', args)}\"\n                        @edit=\"(args) => {$emit('edit', args)}\"\n                        @delete=\"(args) => {$emit('delete', args)}\"\n                />\n            </modal>\n        </component>\n    </div>\n</template>\n\n<script>\n    import Columns from \"./Columns.vue\";\n    import {isDownloadable, isEditable, isViewable, usesPortal} from \"../../mixins\";\n    import Modal from \"../Modal.vue\";\n\n    export default {\n        name: \"GridView\",\n        components: {Columns, Modal},\n        mixins: [isDownloadable, isEditable, isViewable, usesPortal],\n        props: {\n            items: {\n                type: Array,\n                default(){\n                    return []\n                },\n            },\n            readonly: {\n                type: Boolean,\n                default: false\n            },\n            columnsCount: {\n                type: Object,\n            },\n            squaredItems: {\n                type: Boolean,\n                default: false,\n            },\n            displayLimit: {\n                type: Number,\n                default: -1\n            },\n            uploadingMedia: {\n                type: Array,\n                default() {\n                    return [];\n                }\n            },\n        },\n        data(){\n            return {\n            }\n        },\n        methods: {\n            onMore(){\n                this.$nextTick(() => {\n                    this.$nextTick(() => {\n                        this.$refs.moreModal.show();\n                    })\n                });\n            }\n        },\n        computed: {\n            visibleCount(){\n                return this.displayLimit > 0 ? Math.min(this.displayLimit, this.items.length) : this.items.length;\n            },\n            moreCount(){\n                let count = this.items.length - this.visibleCount;\n                return count > 0 ? count + 1 : undefined;\n            },\n            visibleItems(){\n                return this.items.slice(0, this.visibleCount);\n            }\n        }\n    }\n</script>\n\n<style scoped>\n</style>\n","<template>\n    <ImageItem\n            v-if=\"items.length > 0\"\n            class=\"mt-2\"\n            :item=\"mediaItem\"\n            :readonly=\"readonly\"\n            :viewable=\"viewable\"\n            :editable=\"editable\"\n            :downloadable=\"downloadable\"\n            :show-progress=\"progress !== undefined\"\n            :progress-value=\"progress\"\n            @view=\"(args) => {$emit('view', args)}\"\n            @download=\"(args) => {$emit('download', args)}\"\n            @edit=\"(args) => {$emit('edit', args)}\"\n            @delete=\"(args) => {$emit('delete', args)}\"\n    />\n</template>\n\n<script>\n    import ImageItem from \"./ImageItem.vue\";\n    import {isDownloadable, isEditable, isViewable} from \"../../mixins\";\n\n    export default {\n        name: \"SingleView\",\n        components: {ImageItem},\n        mixins: [isDownloadable, isEditable, isViewable],\n        props: {\n            items: {\n                type: Array,\n                default(){\n                    return []\n                },\n            },\n            readonly: {\n                type: Boolean,\n                default: false\n            },\n            uploadingMedia: {\n                type: Array,\n                default() {\n                    return [];\n                }\n            },\n        },\n        computed: {\n            mediaItem(){\n                return this.items[0];\n            },\n            progress(){\n                let uploadingMedia = this.uploadingMedia.find(item => item.media.v_id === this.mediaItem.v_id);\n\n                return uploadingMedia !== undefined ? uploadingMedia.progress : undefined;\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <div>\n        <ul class=\"list-unstyled\">\n            <li\n                v-for=\"item in items\"\n                :key=\"item.v_id\"\n            >\n                <template v-if=\"!readonly\">\n                    <b-button variant=\"outline-light\" class=\"mx-1\" @click=\"$emit('delete', item)\">\n                        <Icon class=\"fill-current\" d=\"M8 6V4c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2h5a1 1 0 0 1 0 2h-1v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V8H3a1 1 0 1 1 0-2h5zM6 8v12h12V8H6zm8-2V4h-4v2h4zm-4 4a1 1 0 0 1 1 1v6a1 1 0 0 1-2 0v-6a1 1 0 0 1 1-1zm4 0a1 1 0 0 1 1 1v6a1 1 0 0 1-2 0v-6a1 1 0 0 1 1-1z\"/>\n                    </b-button>\n                </template>\n                {{ item.file_name }}\n            </li>\n        </ul>\n    </div>\n</template>\n\n<script>\n    import Icon from \"../Icon.vue\";\n\n    export default {\n        name: \"ListView\",\n        components: {Icon},\n        props: {\n            items: {\n                type: Array,\n                default(){\n                    return []\n                },\n            },\n            readonly: {\n                type: Boolean,\n                default: false\n            },\n            uploadingMedia: {\n                type: Array,\n                default() {\n                    return [];\n                }\n            },\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <div>\n        <component\n                :is=\"viewMode\"\n                :items=\"items\"\n                :readonly=\"readonly\"\n                :viewable=\"viewable\"\n                :editable=\"editable\"\n                :downloadable=\"downloadable\"\n                :columns-count=\"gridColumns\"\n                :squared-items=\"gridSquaredItems\"\n                :display-limit=\"gridDisplayLimit\"\n                :use-portal=\"usePortal\"\n                :portal-target=\"portalTarget\"\n                :uploading-media=\"uploadingMedia\"\n                @view=\"onView\"\n                @download=\"onDownload\"\n                @edit=\"onEdit\"\n                @delete=\"onDelete\"\n        />\n\n        <template v-if=\"!readonly\">\n            <file-picker\n                    v-if=\"(viewMode === 'single' && items.length === 0) || (viewMode !== 'single' && (limit === -1 || items.length < limit))\"\n                    class=\"my-2 mx-1\"\n                    :mode=\"filePickerMode\"\n                    :accept=\"accept\"\n                    @selected=\"onSelected\"\n            >\n                <template #help>\n                    <slot name=\"help\"/>\n                </template>\n            </file-picker>\n        </template>\n\n        <component :is=\"usePortal ? 'portal' : 'div'\" :to=\"portalTarget\">\n            <template v-if=\"!readonly\">\n                <modal ref=\"addModal\" size=\"xl\" @ok=\"onSaveCreate\" ok-title=\"Save\">\n                    <image-cropper\n                            ref=\"addCropper\"\n                            v-if=\"addItem\"\n                            :image=\"addItem.url\"\n                            :aspect-ratio=\"cropperAspectRatio\"\n                            :min-width=\"cropperMinWidth\"\n                            :max-width=\"cropperMaxWidth\"\n                            :min-height=\"cropperMinHeight\"\n                            :max-height=\"cropperMaxHeight\"\n                    />\n                </modal>\n\n                <modal ref=\"editModal\" size=\"xl\" @ok=\"onSaveEdit\" ok-title=\"Save\">\n                    <image-cropper\n                            ref=\"editCropper\"\n                            v-if=\"editItem\"\n                            :image=\"editItem.url\"\n                            :aspect-ratio=\"cropperAspectRatio\"\n                            :min-width=\"cropperMinWidth\"\n                            :max-width=\"cropperMaxWidth\"\n                            :min-height=\"cropperMinHeight\"\n                            :max-height=\"cropperMaxHeight\"\n                    />\n                </modal>\n            </template>\n        </component>\n\n        <light-box\n                v-if=\"viewable\"\n                ref=\"lightBox\"\n                :media=\"lightBoxMedia\"\n                :show-light-box=\"false\"\n                :show-thumbs=\"false\"\n        />\n    </div>\n</template>\n\n<script>\n    import FilePicker from \"./FilePicker/index.vue\";\n    import Modal from \"./Modal.vue\";\n    import ImageCropper from \"./ImageCropper.vue\";\n    import Grid from \"./Views/Grid.vue\";\n    import Single from \"./Views/Single.vue\";\n    import List from \"./Views/List.vue\";\n    import Media from \"../Media.js\";\n    import {isDownloadable, isEditable, isViewable, usesPortal} from \"../mixins\";\n    import LightBox from 'vue-image-lightbox';\n\n    export default {\n        name: \"MediaLibrary\",\n        components: {ImageCropper, Modal, FilePicker, Grid, Single, List, LightBox},\n        mixins: [isDownloadable, isEditable, isViewable, usesPortal],\n        props: {\n            media: {\n                type: Array,\n                required: true,\n            },\n            accept: {\n                type: Array,\n                default(){\n                    return ['*']\n                }\n            },\n            limit: {\n                type: Number,\n                default: -1,\n            },\n            viewMode: {\n                type: String,\n                default: 'list',\n                validator(value) {\n                    return [\n                        'grid',\n                        'single',\n                        'list',\n                    ].indexOf(value) !== -1\n                }\n            },\n            filePickerMode: {\n                type: String,\n                default: 'button',\n                validator(value) {\n                    return [\n                        'button',\n                        'drag' // fixme: make it more graceful\n                    ].indexOf(value) !== -1\n                }\n            },\n            collectionName: {\n                type: String,\n                default: 'default',\n            },\n            readonly: {\n                type: Boolean,\n                default: false,\n            },\n            cropperAspectRatio: {\n                type: Number\n            },\n            cropperMinWidth: {\n                type: Number\n            },\n            cropperMaxWidth: {\n                type: Number\n            },\n            cropperMinHeight: {\n                type: Number\n            },\n            cropperMaxHeight: {\n                type: Number\n            },\n            gridColumns: {\n                type: Object,\n            },\n            gridSquaredItems: {\n                type: Boolean,\n                default: false,\n            },\n            gridDisplayLimit: {\n                type: Number,\n                default: -1\n            },\n            uploadBaseUrl: {\n                type: String\n            },\n            uploadModelClass: {\n                type: String\n            },\n        },\n        model: {\n            prop: 'media',\n        },\n        data(){\n            return {\n                /**\n                 * @var {Media|null} addItem\n                 */\n                addItem: null,\n                /**\n                 * @var {Media|null} editItem\n                 */\n                editItem: null,\n                /**\n                 * @var {Media[]} items\n                 */\n                items: [],\n                /**\n                 * @param {Array<Object>} addedItems where each item is an Object which has media property and optional\n                 * pendingMediaId property\n                 */\n                addedItems: [],\n                /**\n                 * @param {Array<Object>} updatedItems where each item is an Object which has media property and optional\n                 * pendingMediaId property\n                 */\n                updatedItems: [],\n                /**\n                 * @var {Media[]} deletedItems\n                 */\n                deletedItems: [],\n                /**\n                 * @param {Object} uploadingMedia\n                 */\n                uploadingMedia: [],\n            }\n        },\n        watch: {\n            media(new_){\n                this.items = this.filterMedia(this.mapObjectsToMedia(new_));\n            }\n        },\n        mounted(){\n            this.items = this.filterMedia(this.mapObjectsToMedia(this.media));\n        },\n        methods: {\n            onSelected(file){\n                let img = URL.createObjectURL(file); // fixme: do only for images\n                this.addItem = new Media(null, this.collectionName, file.name, file.type, file, img, img);\n\n                if (this.editable){\n                    this.$nextTick(() => {\n                        this.$nextTick(() => {\n                            this.$refs.addModal.show()\n                        })\n                    })\n                }\n                else {\n                    let item = this.addItem.clone();\n                    this.items.push(item);\n                    this.addedItems.push({media: item});\n                    this.onAdded(item);\n                }\n            },\n\n            onSaveCreate(){\n                this.$refs.addModal.hide();\n\n                this.$refs.addCropper.getResult(blob => {\n                        let item = this.blobToMedia(blob, this.addItem);\n\n                        this.items.push(item);\n\n                        this.onAdded(item);\n\n                        if (this.shouldAutoUpload){\n                            this.storePendingMedia(item)\n                                .then(({pendingMediaId}) => {\n                                    this.addedItems.push({media: item, pendingMediaId});\n                                })\n                                .catch(error => {\n                                    // todo: manage properly\n                                    console.error(error)\n                                });\n                        }\n                        else {\n                            this.addedItems.push({media: item});\n                        }\n                    }, this.addItem.mime_type);\n            },\n\n            onSaveEdit(){\n                this.$refs.editModal.hide();\n\n                this.$refs.editCropper.getResult(blob => {\n                    let editedMedia = this.blobToMedia(blob, this.editItem);\n\n                    this.items = this.items.map(item => {\n                        if (item.id === editedMedia.id){\n                            item.url = editedMedia.url;\n                            item.thumbnail = editedMedia.thumbnail;\n                            item.file = editedMedia.file;\n                        }\n                        return item;\n                    });\n                    this.onUpdated(this.editItem);\n\n                    let previous = this.updatedItems.find(item => item.media.id === editedMedia.id);\n                    if (previous){\n                        this.updatedItems = this.updatedItems.map(item => {\n                            if (item.media.id === editedMedia.id){\n                                item.media = editedMedia;\n                            }\n                            return item;\n                        });\n\n                        if (this.shouldAutoUpload){\n                            let updatedItem = this.updatedItems.find(item => item.media.id === editedMedia.id);\n\n                            this.updatePendingMedia(updatedItem.media, updatedItem.pendingMediaId)\n                                .then(() => {\n                                    this.updatedItems = this.updatedItems.map(item => {\n                                        if (item.media.id === editedMedia.id){\n                                            item.pendingMediaId = updatedItem.pendingMediaId;\n                                        }\n                                        return item;\n                                    });\n                                })\n                                .catch(error => {\n                                    // todo: manage properly\n                                    console.error(error)\n                                });\n                        }\n                    }\n                    else if (this.shouldAutoUpload) {\n                        this.storePendingMedia(editedMedia)\n                            .then(({pendingMediaId}) => {\n                                this.updatedItems.push({media: editedMedia, pendingMediaId});\n                            })\n                            .catch(error => {\n                                // todo: manage properly\n                                console.error(error)\n                            });\n                    }\n                    else {\n                        this.updatedItems.push({media: editedMedia});\n                    }\n                }, this.editItem.mime_type);\n            },\n\n            /**\n             * @param {Blob} blob\n             * @param {Media} item\n             */\n            blobToMedia(blob, item){\n                let newItem = item.clone();\n\n                let file = new File([blob], newItem.file_name,{ type: blob.type });\n                let url = URL.createObjectURL(blob);\n                newItem.url = newItem.thumbnail = url;\n                newItem.file = file;\n\n                return newItem;\n            },\n\n            /**\n             * @param {Media} item\n             */\n            onView(item){\n                let i = this.items.map(v => v.v_id).indexOf(item.v_id);\n                this.$refs.lightBox.showImage(i);\n            },\n            onDownload(item){\n                console.log('onDownload', item);\n            },\n            onEdit(item){\n                this.editItem = item;\n                this.$refs.editModal.show()\n            },\n            onDelete(item){\n                if (confirm('Sure?')){ // fixme: use tailwind dialog\n                    this.delete(item);\n                }\n            },\n            delete(item){\n                this.items = this.items.filter(mediaItem => {\n                    return mediaItem.v_id !== item.v_id;\n                });\n\n                let previous;\n                if (item.id){\n                    this.deletedItems.push({...item});\n                    previous = this.updatedItems.find(mediaItem => mediaItem.media.v_id === item.v_id);\n                    this.updatedItems = this.updatedItems.filter(mediaItem => mediaItem.media.v_id !== item.v_id);\n                }\n                else {\n                    previous = this.addedItems.find(mediaItem => mediaItem.media.v_id === item.v_id);\n                    this.addedItems = this.addedItems.filter(mediaItem => mediaItem.media.v_id !== item.v_id);\n                }\n\n                if (previous && this.shouldAutoUpload){\n                    this.deletePendingMedia(previous.pendingMediaId);\n                }\n\n                this.onDeleted(item);\n            },\n\n            /**\n             * @param {Object[]} items\n             * @return {Media[]}\n             */\n            mapObjectsToMedia(items){\n                return items.map(item => Media.fromObject(item))\n            },\n\n            /**\n             * Filters \"mediaItems\" param based on collectionName\n             * @param {Media[]} mediaItems\n             * @return {Media[]}\n             */\n            filterMedia(mediaItems){\n                return mediaItems.filter(item => item.collection_name === this.collectionName)\n            },\n\n            /**\n             * @param {Media} media\n             */\n            storePendingMedia(media){\n                return new Promise((resolve, reject) => {\n                    this.uploadingMedia.push({media, progress: 0});\n\n                    let data = new FormData();\n                    data.set('collection_name', this.collectionName);\n                    data.set('model_class', this.uploadModelClass);\n                    data.set('media[file]', media.file);\n\n                    let config = {\n                        onUploadProgress: (progressEvent) => this.onUploadProgress(media, progressEvent),\n                    };\n\n                    this.axios\n                        .post(this.pendingStoreUrl, data, config)\n                        .then(({data}) => {\n                            this.removeUploadingMedia(media);\n                            resolve({pendingMediaId: data.id});\n                        })\n                        .catch(error => {\n                            console.error(error);\n                            reject(error);\n                        });\n                })\n            },\n\n            /**\n             * @param {Media} media\n             * @param {Number} pendingMediaId\n             */\n            updatePendingMedia(media, pendingMediaId){\n                return new Promise((resolve, reject) => {\n                    this.uploadingMedia.push({media, progress: 0});\n\n                    let data = new FormData();\n                    data.set('_method', 'PUT'); // we cannot send 'multipart/form-data' wit PUT request method\n                    data.set('collection_name', this.collectionName);\n                    data.set('model_class', this.uploadModelClass);\n                    data.set('media[file]', media.file);\n\n                    let config = {\n                        onUploadProgress: (progressEvent) => this.onUploadProgress(media, progressEvent),\n                    };\n\n                    this.axios\n                        .post(this.pendingUpdateUrl.replace('{id}', `${pendingMediaId}`), data, config)\n                        .then(({data}) => {\n                            resolve(data);\n                        })\n                        .catch(error => {\n                            console.error(error);\n                            reject(error);\n                        });\n                })\n            },\n\n            /**\n             * @param {Number} pendingMediaId\n             */\n            deletePendingMedia(pendingMediaId){\n                return new Promise((resolve, reject) => {\n                    this.axios\n                        .delete(this.pendingDeleteUrl.replace('{id}', `${pendingMediaId}`))\n                        .then(({data}) => {\n                            resolve(data);\n                        })\n                        .catch(error => {\n                            console.error(error);\n                            reject(error);\n                        });\n                })\n            },\n\n            onUploadProgress(media, progressEvent){\n                const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\n\n                if (totalLength !== null) {\n                    this.updateProgressValue(media, Math.round( (progressEvent.loaded * 100) / totalLength ));\n                }\n            },\n\n            updateProgressValue(media, value){\n                this.uploadingMedia = this.uploadingMedia.map(item => {\n                    if (item.media.v_id === media.v_id){\n                        item.progress = value;\n                    }\n                    return item;\n                })\n            },\n\n            removeUploadingMedia(media){\n                this.uploadingMedia = this.uploadingMedia.filter(item => item.media.v_id !== media.v_id)\n            },\n\n            /**\n             *\n             * @param {FormData} formData\n             */\n            fillFormData(formData){\n                this.addedItems.forEach(item => {\n                    if (item.pendingMediaId !== undefined){\n                        formData.append(`media[store][${this.collectionName}][][pending_media_id]`, item.pendingMediaId);\n                    }\n                    else {\n                        formData.append(`media[store][${this.collectionName}][][file]`, item.media.file);\n                    }\n                });\n\n                this.updatedItems.forEach((item, index) => {\n                    formData.set(`media[update][${index}][id]`, item.media.id);\n                    if (item.pendingMediaId !== undefined){\n                        formData.set(`media[update][${index}][pending_media_id]`, item.pendingMediaId);\n                    }\n                    else {\n                        formData.set(`media[update][${index}][file]`, item.media.file);\n                    }\n                });\n\n                this.deletedItems.forEach(item => {\n                    formData.append('media[delete][]', item.id);\n                });\n            },\n            onAdded(item){\n                this.$emit('added', item);\n                this.$emit('input', this.items);\n            },\n            onUpdated(item){\n                this.$emit('updated', item);\n                this.$emit('input', this.items);\n            },\n            onDeleted(item){\n                this.$emit('deleted', item);\n                this.$emit('input', this.items);\n            },\n        },\n        computed: {\n            lightBoxMedia(){\n                /**\n                 * @param {Media} item\n                 */\n                return this.items.map((item) => {\n                    return {thumb: item.url, src: item.url}\n                })\n            },\n            pendingStoreUrl() {\n                return `${this.uploadBaseUrl}/laravel-media-library/pending`;\n            },\n            pendingUpdateUrl() {\n                return `${this.uploadBaseUrl}/laravel-media-library/pending/{id}`;\n            },\n            pendingDeleteUrl() {\n                return `${this.uploadBaseUrl}/laravel-media-library/pending/{id}`;\n            },\n            shouldAutoUpload() {\n                return this.uploadBaseUrl !== undefined && this.uploadModelClass !== undefined;\n            },\n        }\n    }\n</script>\n\n<style scoped>\n    >>> .vue-lb-footer-count{\n        display: none;\n    }\n</style>\n","require('vue-image-lightbox/dist/vue-image-lightbox.min.css');\n\n// Import vue component\nimport MediaLibrary from './components/MediaLibrary.vue';\n\n// Declare install function executed by Vue.use()\nfunction install(Vue) {\n    if (install.installed) return;\n    install.installed = true;\n    Vue.component('media-library', MediaLibrary);\n}\n\n// Create module definition for Vue.use()\nconst plugin = {\n    install,\n};\n\n// Auto-install when vue is found (eg. in browser via <script> tag)\nlet GlobalVue = null;\nif (typeof window !== 'undefined') {\n    GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n    GlobalVue = global.Vue;\n}\nif (GlobalVue) {\n    GlobalVue.use(plugin);\n}\n\n// To allow use as module (npm/webpack/etc.) export component\nexport default MediaLibrary;\n"],"names":["const","let","MediaLibrary"],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AArDA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAtCA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAxEA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAfA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA,qBAAe;AACf,IAAI,KAAK,EAAE;AACX,QAAQ,YAAY,EAAE;AACtB,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,OAAO,EAAE,KAAK;AAC1B,SAAS;AACT,KAAK;AACL;;ACPA,iBAAe;AACf,IAAI,KAAK,EAAE;AACX,QAAQ,QAAQ,EAAE;AAClB,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,OAAO,EAAE,KAAK;AAC1B,SAAS;AACT,KAAK;AACL;;ACPA,iBAAe;AACf,IAAI,KAAK,EAAE;AACX,QAAQ,QAAQ,EAAE;AAClB,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,OAAO,EAAE,KAAK;AAC1B,SAAS;AACT,KAAK;AACL;;ACPA,iBAAe;AACf,IAAI,KAAK,EAAE;AACX,QAAQ,SAAS,EAAE;AACnB,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,OAAO,EAAE,KAAK;AAC1B,SAAS;AACT,QAAQ,YAAY,EAAE;AACtB,YAAY,IAAI,EAAE,MAAM;AACxB,YAAY,OAAO,EAAE,QAAQ;AAC7B,SAAS;AACT,KAAK;AACL,CAAC;;ACXD;AACA;AACA;AACA;AACA;AACA,IAAM,KAAK,GACP,cAAW,CAAC,EAAE,EAAE,cAAc,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE;AAC9E,IAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5D,IAAQ,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AACrB,IAAQ,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;AAC9C,IAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAClC,IAAQ,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAClC,IAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,IAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB,IAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC/B,EAAC;AACL;AACI;AACJ;AACA;AACA;AACI,MAAO,kCAAW,GAAG,CAAC;AAC1B,IAAQ,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,SAAS,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,SAAS,CAAC;AAC7G,EAAC;AACL;AACI;AACJ;AACA;gBACI,yBAAO;AACX,IAAQ,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC;AACxH,EACH;;;ACkBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAzFA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAzEA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC2BAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAvJA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAxGA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;;AAEA;AACA;AACA;AACA;;;AAtDA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA1CA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoviBA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA,OAAO,CAAC,oDAAoD,CAAC,CAAC;AAC9D,AAGA;AACA;AACA,SAAS,OAAO,CAAC,GAAG,EAAE;AACtB,IAAI,IAAI,OAAO,CAAC,SAAS,IAAE,SAAO;AAClC,IAAI,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;AAC7B,IAAI,GAAG,CAAC,SAAS,CAAC,eAAe,EAAEE,mBAAY,CAAC,CAAC;AACjD,CAAC;AACD;AACA;AACAF,IAAM,MAAM,GAAG;AACf,aAAI,OAAO;AACX,CAAC,CAAC;AACF;AACA;AACAC,IAAI,SAAS,GAAG,IAAI,CAAC;AACrB,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AACnC,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC;AAC3B,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AAC1C,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC;AAC3B,CAAC;AACD,IAAI,SAAS,EAAE;AACf,IAAI,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC;;;;"}