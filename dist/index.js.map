{"version":3,"file":"index.js","sources":["../src/components/FilePicker/ButtonFilePicker.vue","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../node_modules/vue-runtime-helpers/dist/inject-style/browser.mjs","../src/components/FilePicker/DragFilePicker.vue","../src/components/FilePicker/index.vue","../src/components/Modal.vue","../src/components/ImageCropper.vue","../src/mixins/isDownloadable.js","../src/mixins/isEditable.js","../src/mixins/isViewable.js","../src/mixins/usesPortal.js","../src/mixins/usesProgress.js","../src/components/Icons/Icon.vue","../src/components/Icons/Delete.vue","../src/components/Icons/Download.vue","../src/components/Icons/Edit.vue","../src/Media.js","../src/components/Icons/View.vue","../src/components/Views/ImageItem.vue","../src/components/Views/Column.vue","../src/components/Views/Columns.vue","../src/components/Views/View.js","../src/components/Views/Grid.vue","../src/components/Views/Single.vue","../src/components/Views/ListItem.vue","../src/components/Views/List.vue","../src/components/MediaLibrary.vue","../src/index.js"],"sourcesContent":["<template>\r\n    <div>\r\n        <b-button variant=\"primary\" @click.prevent=\"$refs.input.click()\">Select a file</b-button>\r\n        <input ref=\"input\" type=\"file\" :accept=\"accept\" @change=\"() => {$emit('change', $refs.input.files)}\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"ButtonFilePicker\",\r\n    props: {\r\n        accept: {\r\n            type: String,\r\n            required: true,\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ninput {\r\n    display: none;\r\n}\r\n</style>\r\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","const isOldIE = typeof navigator !== 'undefined' &&\r\n    /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\r\nfunction createInjector(context) {\r\n    return (id, style) => addStyle(id, style);\r\n}\r\nlet HEAD;\r\nconst styles = {};\r\nfunction addStyle(id, css) {\r\n    const group = isOldIE ? css.media || 'default' : id;\r\n    const style = styles[group] || (styles[group] = { ids: new Set(), styles: [] });\r\n    if (!style.ids.has(id)) {\r\n        style.ids.add(id);\r\n        let code = css.source;\r\n        if (css.map) {\r\n            // https://developer.chrome.com/devtools/docs/javascript-debugging\r\n            // this makes source maps inside style tags work properly in Chrome\r\n            code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */';\r\n            // http://stackoverflow.com/a/26603875\r\n            code +=\r\n                '\\n/*# sourceMappingURL=data:application/json;base64,' +\r\n                    btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\r\n                    ' */';\r\n        }\r\n        if (!style.element) {\r\n            style.element = document.createElement('style');\r\n            style.element.type = 'text/css';\r\n            if (css.media)\r\n                style.element.setAttribute('media', css.media);\r\n            if (HEAD === undefined) {\r\n                HEAD = document.head || document.getElementsByTagName('head')[0];\r\n            }\r\n            HEAD.appendChild(style.element);\r\n        }\r\n        if ('styleSheet' in style.element) {\r\n            style.styles.push(code);\r\n            style.element.styleSheet.cssText = style.styles\r\n                .filter(Boolean)\r\n                .join('\\n');\r\n        }\r\n        else {\r\n            const index = style.ids.size - 1;\r\n            const textNode = document.createTextNode(code);\r\n            const nodes = style.element.childNodes;\r\n            if (nodes[index])\r\n                style.element.removeChild(nodes[index]);\r\n            if (nodes.length)\r\n                style.element.insertBefore(textNode, nodes[index]);\r\n            else\r\n                style.element.appendChild(textNode);\r\n        }\r\n    }\r\n}\n\nexport default createInjector;\n//# sourceMappingURL=browser.mjs.map\n","<template>\r\n    <div>\r\n        <p @click=\"$refs.input.click()\">Drag your files here or click in this area.</p>\r\n        <input ref=\"input\" type=\"file\" :accept=\"accept\" @change=\"() => {$emit('change', $refs.input.files)}\">\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"DragFilePicker\",\r\n        props: {\r\n            accept: {\r\n                type: String,\r\n                required: true,\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    p{\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: center;\r\n        font-size: 2em;\r\n        line-height: 170px;\r\n        background-color: #cecece;\r\n        border: 3px dashed gray;\r\n        color: #4a4a4a;\r\n        cursor: pointer;\r\n    }\r\n    p:hover{\r\n        color: #242424;\r\n    }\r\n    input{\r\n        display: none;\r\n    }\r\n</style>","<template>\r\n    <div>\r\n        <slot :change=\"onChange\" :accept=\"acceptFiles\"/>\r\n\r\n        <component\r\n            v-if=\"!$scopedSlots['default']\"\r\n            :is=\"`${mode}-file-picker`\"\r\n            :accept=\"acceptFiles\"\r\n            @change=\"onChange\"\r\n        />\r\n\r\n        <div class=\"mt-1\">\r\n            <slot name=\"help\"/>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ButtonFilePicker from \"./ButtonFilePicker.vue\";\r\nimport DragFilePicker from \"./DragFilePicker.vue\";\r\n\r\nexport default {\r\n    name: \"FilePicker\",\r\n    components: {ButtonFilePicker, DragFilePicker},\r\n    props: {\r\n        accept: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        mode: {\r\n            type: String,\r\n            default: 'button',\r\n        },\r\n    },\r\n    methods: {\r\n        /**\r\n         * @param {FileList} files\r\n         * @returns void\r\n         */\r\n        onChange(files) {\r\n            let file = this.filter(files[0]);\r\n            if (!file) {\r\n                this.$emit('error:wrong_files', {files});\r\n                return;\r\n            }\r\n\r\n            this.$emit('selected', file);\r\n        },\r\n\r\n        /**\r\n         * @param {File} file\r\n         * @returns {File|null}\r\n         */\r\n        filter(file) {\r\n            return this.accept.indexOf(file.type) >= 0 || this.accept.indexOf('*') >= 0 ? file : null;\r\n        }\r\n    },\r\n    computed: {\r\n        acceptFiles() {\r\n            return this.accept.join(',');\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n    <b-modal\r\n            :id=\"modalId\"\r\n            :size=\"size\"\r\n            :static=\"true\"\r\n            :lazy=\"true\"\r\n            :ok-title=\"okTitle\"\r\n            @ok=\"(args) => {$emit('ok', args)}\"\r\n    >\r\n        <slot></slot>\r\n    </b-modal>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"Modal\",\r\n        props: {\r\n            modalId: {\r\n                type: String,\r\n                default(){\r\n                    return Math.random().toString(36).substring(3);\r\n                }\r\n            },\r\n            size: {\r\n                type: String,\r\n            },\r\n            okTitle: {\r\n                type: String\r\n            }\r\n        },\r\n        methods: {\r\n            show(){\r\n                this.$bvModal.show(this.modalId)\r\n            },\r\n            hide(){\r\n                this.$bvModal.hide(this.modalId)\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","<template>\r\n    <div>\r\n        <cropper\r\n            ref=\"cropper\"\r\n            :src=\"image\"\r\n            v-bind=\"options\"\r\n            :container-style=\"{maxHeight: '70vh'}\"\r\n        />\r\n\r\n        <div class=\"mt-3\">\r\n            <slot v-bind=\"slotBindings\"/>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Cropper from 'vue-cropperjs';\r\n    import 'cropperjs/dist/cropper.css';\r\n\r\n    export default {\r\n        name: \"ImageCropper\",\r\n        components: {Cropper},\r\n        props: {\r\n            image: {\r\n                type: String,\r\n                required: true,\r\n            },\r\n            options: {\r\n                type: Object,\r\n                default: () => {\r\n                    return {};\r\n                },\r\n            },\r\n        },\r\n        data(){\r\n            return {}\r\n        },\r\n        methods: {\r\n            /**\r\n             * @param {BlobCallback} callback\r\n             * @param {string?} type\r\n             * @param {number?} quality\r\n             */\r\n            getResult(callback, type, quality){\r\n                this.$refs.cropper.getCroppedCanvas(this.options).toBlob(callback, type, quality)\r\n            },\r\n        },\r\n        computed: {\r\n            slotBindings(){\r\n                return {\r\n                    reset: (...args) => this.$refs.cropper.reset(...args),\r\n                    clear: (...args) => this.$refs.cropper.clear(...args),\r\n                    initCrop: (...args) => this.$refs.cropper.initCrop(...args),\r\n                    replace: (...args) => this.$refs.cropper.replace(...args),\r\n                    enable: (...args) => this.$refs.cropper.enable(...args),\r\n                    disable: (...args) => this.$refs.cropper.disable(...args),\r\n                    destroy: (...args) => this.$refs.cropper.destroy(...args),\r\n                    move: (...args) => this.$refs.cropper.move(...args),\r\n                    moveTo: (...args) => this.$refs.cropper.moveTo(...args),\r\n                    relativeZoom: (...args) => this.$refs.cropper.relativeZoom(...args),\r\n                    zoomTo: (...args) => this.$refs.cropper.zoomTo(...args),\r\n                    rotate: (...args) => this.$refs.cropper.rotate(...args),\r\n                    rotateTo: (...args) => this.$refs.cropper.rotateTo(...args),\r\n                    scaleX: (...args) => this.$refs.cropper.scaleX(...args),\r\n                    scaleY: (...args) => this.$refs.cropper.scaleY(...args),\r\n                    scale: (...args) => this.$refs.cropper.scale(...args),\r\n                    getData: (...args) => this.$refs.cropper.getData(...args),\r\n                    setData: (...args) => this.$refs.cropper.setData(...args),\r\n                    getContainerData: (...args) => this.$refs.cropper.getContainerData(...args),\r\n                    getImageData: (...args) => this.$refs.cropper.getImageData(...args),\r\n                    getCanvasData: (...args) => this.$refs.cropper.getCanvasData(...args),\r\n                    setCanvasData: (...args) => this.$refs.cropper.setCanvasData(...args),\r\n                    getCropBoxData: (...args) => this.$refs.cropper.getCropBoxData(...args),\r\n                    setCropBoxData: (...args) => this.$refs.cropper.setCropBoxData(...args),\r\n                    setAspectRatio: (...args) => this.$refs.cropper.setAspectRatio(...args),\r\n                    setDragMode: (...args) => this.$refs.cropper.setDragMode(...args),\r\n                };\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n","export default {\r\n    props: {\r\n        downloadable: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n    }\r\n}","export default {\r\n    props: {\r\n        editable: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n    }\r\n}","export default {\r\n    props: {\r\n        viewable: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n    }\r\n}","export default {\r\n    props: {\r\n        usePortal: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        portalTarget: {\r\n            type: String,\r\n            default: 'modals',\r\n        },\r\n    }\r\n}\r\n","export default {\r\n    methods: {\r\n        shouldShowProgress(uploadingMedia, item) {\r\n            return this.getUploadingItem(uploadingMedia, item) !== undefined;\r\n        },\r\n        getProgressValue(uploadingMedia, item) {\r\n            let uploadingItem = this.getUploadingItem(uploadingMedia, item);\r\n            return uploadingItem ? uploadingItem.progress : null;\r\n        },\r\n        getUploadingItem(uploadingMedia, item) {\r\n            return uploadingMedia.filter(i => i.media.v_id === item.v_id)[0];\r\n        },\r\n    },\r\n}\r\n","<template>\r\n    <svg class=\"fill-current\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\r\n        <slot/>\r\n    </svg>\r\n</template>\r\n\r\n<script>\r\nexport default {}\r\n</script>\r\n","<template>\r\n    <Icon>\r\n        <path\r\n            d=\"M8 6V4c0-1.1.9-2 2-2h4a2 2 0 0 1 2 2v2h5a1 1 0 0 1 0 2h-1v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V8H3a1 1 0 1 1 0-2h5zM6 8v12h12V8H6zm8-2V4h-4v2h4zm-4 4a1 1 0 0 1 1 1v6a1 1 0 0 1-2 0v-6a1 1 0 0 1 1-1zm4 0a1 1 0 0 1 1 1v6a1 1 0 0 1-2 0v-6a1 1 0 0 1 1-1z\"\r\n        />\r\n    </Icon>\r\n</template>\r\n\r\n<script>\r\nimport Icon from \"./Icon.vue\";\r\n\r\nexport default {\r\n    components: {Icon}\r\n}\r\n</script>\r\n","<template>\r\n    <Icon>\r\n        <path\r\n            d=\"M11 14.59V3a1 1 0 0 1 2 0v11.59l3.3-3.3a1 1 0 0 1 1.4 1.42l-5 5a1 1 0 0 1-1.4 0l-5-5a1 1 0 0 1 1.4-1.42l3.3 3.3zM3 17a1 1 0 0 1 2 0v3h14v-3a1 1 0 0 1 2 0v3a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-3z\"\r\n        />\r\n    </Icon>\r\n</template>\r\n\r\n<script>\r\nimport Icon from \"./Icon.vue\";\r\n\r\nexport default {\r\n    components: {Icon}\r\n}\r\n</script>\r\n","<template>\r\n    <Icon>\r\n        <path\r\n            d=\"M6.3 12.3l10-10a1 1 0 0 1 1.4 0l4 4a1 1 0 0 1 0 1.4l-10 10a1 1 0 0 1-.7.3H7a1 1 0 0 1-1-1v-4a1 1 0 0 1 .3-.7zM8 16h2.59l9-9L17 4.41l-9 9V16zm10-2a1 1 0 0 1 2 0v6a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h6a1 1 0 0 1 0 2H4v14h14v-6z\"\r\n        />\r\n    </Icon>\r\n</template>\r\n\r\n<script>\r\nimport Icon from \"./Icon.vue\";\r\n\r\nexport default {\r\n    components: {Icon}\r\n}\r\n</script>\r\n","/**\r\n * Class which represents each library item\r\n *\r\n * @property {String} v_id Autogenerated id to use in Vue components\r\n */\r\nclass Media {\r\n    constructor(id, collectionName, fileName, mimeType, file, url, thumbnail) {\r\n        this.v_id = Math.random().toString(36).substring(3);\r\n        this.id = id;\r\n        this.collection_name = collectionName;\r\n        this.file_name = fileName;\r\n        this.mime_type = mimeType;\r\n        this.file = file;\r\n        this.url = url;\r\n        this.thumbnail = thumbnail;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Media}\r\n     */\r\n    static fromObject(obj){\r\n        return new Media(obj.id, obj.collection_name, obj.file_name, obj.mime_type, null, obj.url, obj.thumbnail)\r\n    }\r\n\r\n    /**\r\n     * @returns {Media}\r\n     */\r\n    clone(){\r\n        return new Media(this.id, this.collection_name, this.file_name, this.mime_type, this.file, this.url, this.thumbnail)\r\n    }\r\n}\r\n\r\nexport default Media\r\n","<template>\r\n    <Icon>\r\n        <path\r\n            d=\"M16.32 14.9l5.39 5.4a1 1 0 0 1-1.42 1.4l-5.38-5.38a8 8 0 1 1 1.41-1.41zM10 16a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\"\r\n        />\r\n    </Icon>\r\n</template>\r\n\r\n<script>\r\nimport Icon from \"./Icon.vue\";\r\n\r\nexport default {\r\n    components: {Icon}\r\n}\r\n</script>\r\n","<template>\r\n    <div class=\"position-relative image-container d-flex align-items-center\">\r\n        <div v-if=\"squared\" class=\"spacer\"></div>\r\n        <img\r\n            class=\"image\"\r\n            :class=\"{'h-100': squared, 'position-absolute': squared, 't-0': squared, 'object-cover': squared}\"\r\n            :src=\"item.thumbnail\"\r\n            alt=\"\"\r\n        />\r\n\r\n        <div v-if=\"showProgress\" class=\"visible-overlay d-flex flex-column justify-content-center align-items-center\">\r\n            <div class=\"w-100 px-3\">\r\n                <b-progress :value=\"progressValue\" variant=\"info\" striped animated/>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-else class=\"d-flex flex-column justify-content-center align-items-center\"\r\n             :class=\"isMoreItem ? 'visible-overlay' : 'overlay'\">\r\n            <div>\r\n                <b-link v-if=\"isMoreItem\" class=\"more-link text-white display-4\" @click.prevent=\"$emit('more', item)\">\r\n                    +{{ moreCount }}\r\n                </b-link>\r\n                <template v-else>\r\n                    <b-button v-if=\"viewable\" variant=\"outline-light\" class=\"mx-1\" @click=\"$emit('view', item)\">\r\n                        <ViewIcon/>\r\n                    </b-button>\r\n\r\n                    <b-button v-if=\"downloadable\" variant=\"outline-light\" class=\"mx-1\" @click=\"$emit('download', item)\">\r\n                        <DownloadIcon/>\r\n                    </b-button>\r\n\r\n                    <template v-if=\"!readonly\">\r\n\r\n                        <b-button v-if=\"editable && item.id\" variant=\"outline-light\" class=\"mx-1\"\r\n                                  @click=\"$emit('edit', item)\">\r\n                            <EditIcon/>\r\n                        </b-button>\r\n\r\n                        <b-button variant=\"outline-light\" class=\"mx-1\" @click=\"$emit('delete', item)\">\r\n                            <DeleteIcon/>\r\n                        </b-button>\r\n\r\n                    </template>\r\n                </template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    isDownloadable,\r\n    isEditable,\r\n    isViewable,\r\n} from \"../../mixins\";\r\nimport DeleteIcon from \"../Icons/Delete.vue\";\r\nimport DownloadIcon from \"../Icons/Download.vue\";\r\nimport EditIcon from \"../Icons/Edit.vue\";\r\nimport Media from \"../../Media\";\r\nimport ViewIcon from \"../Icons/View.vue\";\r\n\r\nexport default {\r\n    name: \"ImageItem\",\r\n    components: {\r\n        DeleteIcon,\r\n        DownloadIcon,\r\n        EditIcon,\r\n        ViewIcon,\r\n    },\r\n    mixins: [\r\n        isDownloadable,\r\n        isEditable,\r\n        isViewable,\r\n    ],\r\n    props: {\r\n        item: {\r\n            type: Object,\r\n            required: true\r\n        },\r\n        readonly: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        squared: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        moreCount: {\r\n            type: Number\r\n        },\r\n        moreItem: {\r\n            type: Media,\r\n        },\r\n        showProgress: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        progressValue: {\r\n            type: Number,\r\n            default: 0\r\n        }\r\n    },\r\n    computed: {\r\n        isMoreItem() {\r\n            return this.moreCount !== undefined && this.moreItem !== undefined && this.moreItem.v_id === this.item.v_id;\r\n        },\r\n        overlayVisible() {\r\n            return this.isMoreItem || this.viewable || this.downloadable || !this.readonly;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.image {\r\n    vertical-align: middle;\r\n    width: 100%;\r\n    backface-visibility: hidden;\r\n}\r\n\r\n.image-container:hover .overlay {\r\n    opacity: 1;\r\n}\r\n\r\n.spacer {\r\n    padding-top: 100%;\r\n}\r\n\r\n.t-0 {\r\n    top: 0;\r\n}\r\n\r\n.fill-current {\r\n    fill: currentColor;\r\n}\r\n\r\n.object-cover {\r\n    object-fit: cover;\r\n}\r\n\r\n.image-container {\r\n    overflow: hidden;\r\n}\r\n\r\n.overlay,\r\n.visible-overlay {\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    overflow: hidden;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    -webkit-transition: all .4s ease-in-out;\r\n    transition: all .4s ease-in-out\r\n}\r\n\r\n.overlay {\r\n    opacity: 0;\r\n}\r\n\r\n.image-container img {\r\n    -webkit-transition: all .4s linear;\r\n    transition: all .4s linear;\r\n}\r\n\r\n.image-container:hover img {\r\n    -ms-transform: scale(1.2);\r\n    -webkit-transform: scale(1.2);\r\n    transform: scale(1.2);\r\n}\r\n\r\n.image-container:hover .overlay {\r\n    opacity: 1;\r\n    filter: alpha(opacity=100);\r\n}\r\n\r\n.more-link {\r\n    text-decoration: none;\r\n}\r\n\r\n</style>\r\n","<template>\r\n    <div class=\"column px-1\">\r\n        <ImageItem\r\n                class=\"mt-2\"\r\n                v-for=\"item in items\"\r\n                :key=\"item.v_id\"\r\n                :item=\"item\"\r\n                :readonly=\"readonly\"\r\n                :viewable=\"viewable\"\r\n                :editable=\"editable\"\r\n                :downloadable=\"downloadable\"\r\n                :squared=\"squaredItems\"\r\n                :more-count=\"moreCount\"\r\n                :more-item=\"moreItem\"\r\n                :show-progress=\"shouldShowProgress(uploadingMedia, item)\"\r\n                :progress-value=\"getProgressValue(uploadingMedia, item)\"\r\n                @view=\"(args) => {$emit('view', args)}\"\r\n                @download=\"(args) => {$emit('download', args)}\"\r\n                @edit=\"(args) => {$emit('edit', args)}\"\r\n                @delete=\"(args) => {$emit('delete', args)}\"\r\n                @more=\"(args) => {$emit('more', args)}\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import ImageItem from \"./ImageItem.vue\";\r\n    import {\r\n        isDownloadable,\r\n        isEditable,\r\n        isViewable,\r\n        usesProgress,\r\n    } from \"../../mixins\";\r\n    import Media from \"../../Media\";\r\n\r\n    export default {\r\n        name: \"Column\",\r\n        components: {ImageItem},\r\n        mixins: [\r\n            isDownloadable,\r\n            isEditable,\r\n            isViewable,\r\n            usesProgress,\r\n        ],\r\n        props: {\r\n            items: {\r\n                type: Array,\r\n                default(){\r\n                    return []\r\n                }\r\n            },\r\n            readonly: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            squaredItems: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            moreCount: {\r\n                type: Number\r\n            },\r\n            moreItem: {\r\n                type: Media,\r\n            },\r\n            uploadingMedia: {\r\n                type: Array,\r\n                default() {\r\n                    return [];\r\n                }\r\n            },\r\n        },\r\n    }\r\n</script>\r\n","<template>\r\n    <div class=\"d-flex flex-wrap\">\r\n        <column\r\n                :class=\"columnClasses\"\r\n                v-for=\"(column, i) in columns\"\r\n                :key=\"i\"\r\n                :items=\"column\"\r\n                :readonly=\"readonly\"\r\n                :viewable=\"viewable\"\r\n                :editable=\"editable\"\r\n                :downloadable=\"downloadable\"\r\n                :squared-items=\"squaredItems\"\r\n                :more-count=\"moreCount\"\r\n                :more-item=\"moreItem\"\r\n                :uploading-media=\"uploadingMedia\"\r\n                @view=\"(args) => {$emit('view', args)}\"\r\n                @download=\"(args) => {$emit('download', args)}\"\r\n                @edit=\"(args) => {$emit('edit', args)}\"\r\n                @delete=\"(args) => {$emit('delete', args)}\"\r\n                @more=\"(args) => {$emit('more', args)}\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Column from \"./Column.vue\";\r\n    import {isDownloadable, isEditable, isViewable} from \"../../mixins\";\r\n    import Media from \"../../Media\";\r\n\r\n    const defaultColumns = {\r\n        'xs': 1,\r\n        'sm': 2,\r\n        'md': 3,\r\n        'lg': 4,\r\n        'xl': 5\r\n    };\r\n\r\n    export default {\r\n        name: \"Columns\",\r\n        components: {Column},\r\n        mixins: [isDownloadable, isEditable, isViewable],\r\n        props: {\r\n            items: {\r\n                type: Array,\r\n                default(){\r\n                    return []\r\n                },\r\n            },\r\n            readonly: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            columnsCount: {\r\n                type: Object,\r\n                default(){\r\n                    return defaultColumns;\r\n                }\r\n            },\r\n            squaredItems: {\r\n                type: Boolean,\r\n                default: false,\r\n            },\r\n            moreCount: {\r\n                type: Number\r\n            },\r\n            moreItem: {\r\n                type: Media,\r\n            },\r\n            uploadingMedia: {\r\n                type: Array,\r\n                default() {\r\n                    return [];\r\n                }\r\n            },\r\n        },\r\n        data(){\r\n            return {\r\n                window: {\r\n                    width: 0,\r\n                    height: 0\r\n                },\r\n                breakpoints: {\r\n                    // https://getbootstrap.com/docs/4.0/layout/overview/#responsive-breakpoints\r\n                    'sm': 576,\r\n                    'md': 768,\r\n                    'lg': 992,\r\n                    'xl': 1200,\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n\r\n        },\r\n        created() {\r\n            this.handleResize();\r\n            window.addEventListener('resize', this.handleResize);\r\n        },\r\n        destroyed() {\r\n            window.removeEventListener('resize', this.handleResize);\r\n        },\r\n        methods: {\r\n            chunk(array, chunks){\r\n                let res = [];\r\n\r\n                for (let i = 0; i < chunks; i++){\r\n                    res.push([]);\r\n                }\r\n\r\n                let current = 0;\r\n                array.forEach(item => {\r\n                    res[current].push(item);\r\n                    current = current + 1 < chunks ? current + 1 : 0;\r\n                });\r\n\r\n                return res;\r\n            },\r\n            handleResize() {\r\n                this.window.width = window.innerWidth;\r\n                this.window.height = window.innerHeight;\r\n            },\r\n            getColumnsCount(breakpoint){\r\n                return this.columnsCount[breakpoint] || defaultColumns[breakpoint];\r\n            },\r\n        },\r\n        computed: {\r\n            columns(){\r\n                let chunks = this.getColumnsCount(this.currentBreakpoint);\r\n\r\n                return this.chunk(this.items, chunks);\r\n            },\r\n            currentBreakpoint(){\r\n                let breakpoint = 'xs';\r\n\r\n                Object.entries(this.breakpoints).reverse().every(entry => {\r\n                    let br = entry[0];\r\n                    let size = entry[1];\r\n                    if (this.window.width >= size){\r\n                        breakpoint = br;\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                });\r\n\r\n                return breakpoint;\r\n            },\r\n            columnClasses(){\r\n                let count = this.getColumnsCount(this.currentBreakpoint);\r\n                let w = count === 1 ? 'full' : `1/${count}`;\r\n                return `w-${w}`;\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .w-full {\r\n        width: 100%;\r\n    }\r\n\r\n    .w-1\\/2 {\r\n        width: 50%;\r\n    }\r\n\r\n    .w-1\\/3 {\r\n        width: 33.33%;\r\n    }\r\n\r\n    .w-1\\/4 {\r\n        width: 25%;\r\n    }\r\n\r\n    .w-1\\/5 {\r\n        width: 20%;\r\n    }\r\n</style>\r\n","export default {\r\n    props: {\r\n        items: {\r\n            type: Array,\r\n            default() {\r\n                return []\r\n            },\r\n        },\r\n        readonly: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        uploadingMedia: {\r\n            type: Array,\r\n            default() {\r\n                return [];\r\n            }\r\n        },\r\n    },\r\n}\r\n","<template>\r\n    <div>\r\n        <columns\r\n            :items=\"visibleItems\"\r\n            :readonly=\"readonly\"\r\n            :viewable=\"viewable\"\r\n            :editable=\"editable\"\r\n            :downloadable=\"downloadable\"\r\n            :columns-count=\"columnsCount\"\r\n            :squared-items=\"squaredItems\"\r\n            :more-count=\"moreCount\"\r\n            :more-item=\"visibleItems[visibleItems.length - 1]\"\r\n            :uploading-media=\"uploadingMedia\"\r\n            @view=\"(args) => {$emit('view', args)}\"\r\n            @download=\"(args) => {$emit('download', args)}\"\r\n            @edit=\"(args) => {$emit('edit', args)}\"\r\n            @delete=\"(args) => {$emit('delete', args)}\"\r\n            @more=\"onMore\"\r\n        />\r\n\r\n        <component :is=\"usePortal ? 'portal' : 'div'\" :to=\"portalTarget\">\r\n            <modal v-if=\"\" ref=\"moreModal\" size=\"xl\">\r\n                <columns\r\n                    :items=\"items\"\r\n                    :readonly=\"readonly\"\r\n                    :viewable=\"viewable\"\r\n                    :editable=\"editable\"\r\n                    :downloadable=\"downloadable\"\r\n                    :columns-count=\"columnsCount\"\r\n                    :squared-items=\"squaredItems\"\r\n                    :uploading-media=\"uploadingMedia\"\r\n                    @view=\"(args) => {$emit('view', args)}\"\r\n                    @download=\"(args) => {$emit('download', args)}\"\r\n                    @edit=\"(args) => {$emit('edit', args)}\"\r\n                    @delete=\"(args) => {$emit('delete', args)}\"\r\n                />\r\n            </modal>\r\n        </component>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Columns from \"./Columns.vue\";\r\nimport {isDownloadable, isEditable, isViewable, usesPortal} from \"../../mixins\";\r\nimport Modal from \"../Modal.vue\";\r\nimport View from \"./View\";\r\n\r\nexport default {\r\n    extends: View,\r\n    components: {\r\n        Columns,\r\n        Modal,\r\n    },\r\n    mixins: [\r\n        isDownloadable,\r\n        isEditable,\r\n        isViewable,\r\n        usesPortal,\r\n    ],\r\n    props: {\r\n        columnsCount: {\r\n            type: Object,\r\n        },\r\n        squaredItems: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        displayLimit: {\r\n            type: Number,\r\n            default: -1\r\n        },\r\n    },\r\n    methods: {\r\n        onMore() {\r\n            this.$nextTick(() => {\r\n                this.$nextTick(() => {\r\n                    this.$refs.moreModal.show();\r\n                })\r\n            });\r\n        }\r\n    },\r\n    computed: {\r\n        visibleCount() {\r\n            return this.displayLimit > 0 ? Math.min(this.displayLimit, this.items.length) : this.items.length;\r\n        },\r\n        moreCount() {\r\n            let count = this.items.length - this.visibleCount;\r\n            return count > 0 ? count + 1 : undefined;\r\n        },\r\n        visibleItems() {\r\n            return this.items.slice(0, this.visibleCount);\r\n        }\r\n    }\r\n}\r\n</script>\r\n","<template>\r\n    <ImageItem\r\n            v-if=\"items.length > 0\"\r\n            class=\"mt-2\"\r\n            :item=\"mediaItem\"\r\n            :readonly=\"readonly\"\r\n            :viewable=\"viewable\"\r\n            :editable=\"editable\"\r\n            :downloadable=\"downloadable\"\r\n            :show-progress=\"progress !== undefined\"\r\n            :progress-value=\"progress\"\r\n            @view=\"(args) => {$emit('view', args)}\"\r\n            @download=\"(args) => {$emit('download', args)}\"\r\n            @edit=\"(args) => {$emit('edit', args)}\"\r\n            @delete=\"(args) => {$emit('delete', args)}\"\r\n    />\r\n</template>\r\n\r\n<script>\r\n    import ImageItem from \"./ImageItem.vue\";\r\n    import {isDownloadable, isEditable, isViewable} from \"../../mixins\";\r\n\r\n    export default {\r\n        name: \"SingleView\",\r\n        components: {ImageItem},\r\n        mixins: [isDownloadable, isEditable, isViewable],\r\n        props: {\r\n            items: {\r\n                type: Array,\r\n                default(){\r\n                    return []\r\n                },\r\n            },\r\n            readonly: {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n            uploadingMedia: {\r\n                type: Array,\r\n                default() {\r\n                    return [];\r\n                }\r\n            },\r\n        },\r\n        computed: {\r\n            mediaItem(){\r\n                return this.items[0];\r\n            },\r\n            progress(){\r\n                let uploadingMedia = this.uploadingMedia.find(item => item.media.v_id === this.mediaItem.v_id);\r\n\r\n                return uploadingMedia !== undefined ? uploadingMedia.progress : undefined;\r\n            }\r\n        },\r\n    }\r\n</script>\r\n","<template>\r\n    <li>\r\n        <b-progress v-if=\"showProgress\" :value=\"progressValue\" variant=\"info\" striped animated/>\r\n        <template v-else-if=\"!readonly\">\r\n            <b-button variant=\"outline-light\" class=\"mx-1\" @click=\"$emit('delete', item)\">\r\n                <DeleteIcon/>\r\n            </b-button>\r\n        </template>\r\n        {{ item.file_name }}\r\n    </li>\r\n</template>\r\n\r\n<script>\r\nimport DeleteIcon from \"../Icons/Delete.vue\";\r\nimport {usesProgress} from \"../../mixins\";\r\n\r\nexport default {\r\n    components: {\r\n        DeleteIcon,\r\n    },\r\n    mixins: [\r\n        usesProgress,\r\n    ],\r\n    props: {\r\n        item: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        readonly: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        showProgress: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        progressValue: {\r\n            type: Number,\r\n        },\r\n    },\r\n}\r\n</script>\r\n","<template>\r\n    <div>\r\n        <ul class=\"list-unstyled\">\r\n            <ListItem\r\n                v-for=\"item in items\"\r\n                :key=\"item.v_id\"\r\n                :item=\"item\"\r\n                :show-progress=\"shouldShowProgress(uploadingMedia, item)\"\r\n                :progress-value=\"getProgressValue(uploadingMedia, item)\"\r\n                @delete=\"args => $emit('delete', args)\"\r\n            />\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ListItem from \"./ListItem.vue\";\r\nimport View from \"./View\";\r\nimport {usesProgress} from \"../../mixins\";\r\n\r\nexport default {\r\n    extends: View,\r\n    components: {ListItem},\r\n    mixins: [usesProgress],\r\n}\r\n</script>\r\n","<template>\r\n    <div>\r\n        <component\r\n            :is=\"viewMode\"\r\n            :items=\"items\"\r\n            :readonly=\"readonly\"\r\n            :viewable=\"viewable\"\r\n            :editable=\"editable\"\r\n            :downloadable=\"downloadable\"\r\n            :columns-count=\"gridColumns\"\r\n            :squared-items=\"gridSquaredItems\"\r\n            :display-limit=\"gridDisplayLimit\"\r\n            :use-portal=\"usePortal\"\r\n            :portal-target=\"portalTarget\"\r\n            :uploading-media=\"uploadingMedia\"\r\n            @view=\"onView\"\r\n            @download=\"onDownload\"\r\n            @edit=\"onEdit\"\r\n            @delete=\"onDelete\"\r\n        />\r\n\r\n        <file-picker\r\n            v-if=\"!readonly && (viewMode === 'single' ? items.length === 0 : (limit === -1 || items.length < limit))\"\r\n            class=\"my-2 mx-1\"\r\n            :mode=\"filePickerMode\"\r\n            :accept=\"accept\"\r\n            @selected=\"onSelected\"\r\n            @error:wrong_files=\"args => $emit('error:wrong_files', args)\"\r\n        >\r\n            <template v-if=\"$scopedSlots['file-picker']\" #default=\"{change, accept: acceptFiles}\">\r\n                <slot name=\"file-picker\" :change=\"change\" :accept=\"acceptFiles\"/>\r\n            </template>\r\n\r\n            <template #help>\r\n                <slot name=\"help\"/>\r\n            </template>\r\n        </file-picker>\r\n\r\n        <component\r\n            v-if=\"!readonly\"\r\n            :is=\"usePortal ? 'portal' : 'div'\"\r\n            :to=\"portalTarget\"\r\n        >\r\n            <modal\r\n                ref=\"cropperModal\"\r\n                size=\"xl\"\r\n                @ok=\"onSave\"\r\n                ok-title=\"Save\"\r\n            >\r\n                <image-cropper\r\n                    ref=\"cropper\"\r\n                    v-if=\"cropperMedia\"\r\n                    :image=\"cropperMedia.url\"\r\n                    :options=\"cropperOptions\"\r\n                >\r\n                    <slot\r\n                        name=\"cropper-tools\"\r\n                        slot-scope=\"scope\"\r\n                        v-bind=\"scope\"\r\n                    />\r\n                </image-cropper>\r\n            </modal>\r\n        </component>\r\n\r\n        <slot v-if=\"viewable\" name=\"viewer\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport FilePicker from \"./FilePicker/index.vue\";\r\nimport Modal from \"./Modal.vue\";\r\nimport ImageCropper from \"./ImageCropper.vue\";\r\nimport Grid from \"./Views/Grid.vue\";\r\nimport Single from \"./Views/Single.vue\";\r\nimport List from \"./Views/List.vue\";\r\nimport Media from \"../Media.js\";\r\nimport {isDownloadable, isEditable, isViewable, usesPortal} from \"../mixins\";\r\n\r\nexport default {\r\n    name: \"VueMediaLibrary\",\r\n    components: {ImageCropper, Modal, FilePicker, Grid, Single, List},\r\n    mixins: [isDownloadable, isEditable, isViewable, usesPortal],\r\n    props: {\r\n        media: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        accept: {\r\n            type: Array,\r\n            default() {\r\n                return ['*']\r\n            }\r\n        },\r\n        limit: {\r\n            type: Number,\r\n            default: -1,\r\n        },\r\n        viewMode: {\r\n            type: String,\r\n            default: 'list',\r\n            validator(value) {\r\n                return [\r\n                    'grid',\r\n                    'single',\r\n                    'list',\r\n                ].indexOf(value) !== -1\r\n            }\r\n        },\r\n        filePickerMode: {\r\n            type: String,\r\n            default: 'button',\r\n            validator(value) {\r\n                return [\r\n                    'button',\r\n                    'drag' // fixme: make it more graceful\r\n                ].indexOf(value) !== -1\r\n            }\r\n        },\r\n        collectionName: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        readonly: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        cropperOptions: {\r\n            type: Object,\r\n        },\r\n        mimeType: {\r\n            type: String,\r\n        },\r\n        gridColumns: {\r\n            type: Object,\r\n        },\r\n        gridSquaredItems: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        gridDisplayLimit: {\r\n            type: Number,\r\n            default: -1\r\n        },\r\n        uploadBaseUrl: {\r\n            type: String\r\n        },\r\n        uploadModelClass: {\r\n            type: String\r\n        },\r\n    },\r\n    model: {\r\n        prop: 'media',\r\n    },\r\n    data() {\r\n        return {\r\n            /**\r\n             * @var {Media|null} cropperMedia\r\n             */\r\n            cropperMedia: null,\r\n\r\n            /**\r\n             * @var {boolean} creating\r\n             */\r\n            creating: false,\r\n\r\n            /**\r\n             * @var {boolean} updating\r\n             */\r\n            updating: false,\r\n\r\n            /**\r\n             * @var {Media[]} items\r\n             */\r\n            items: [],\r\n            /**\r\n             * @param {Array<Object>} addedItems where each item is an Object which has media property and optional\r\n             * pendingMediaId property\r\n             */\r\n            addedItems: [],\r\n            /**\r\n             * @param {Array<Object>} updatedItems where each item is an Object which has media property and optional\r\n             * pendingMediaId property\r\n             */\r\n            updatedItems: [],\r\n            /**\r\n             * @var {Media[]} deletedItems\r\n             */\r\n            deletedItems: [],\r\n            /**\r\n             * @param {Object} uploadingMedia\r\n             */\r\n            uploadingMedia: [],\r\n        }\r\n    },\r\n    watch: {\r\n        media(new_) {\r\n            this.items = this.filterMedia(this.mapObjectsToMedia(new_));\r\n        }\r\n    },\r\n    mounted() {\r\n        this.items = this.filterMedia(this.mapObjectsToMedia(this.media));\r\n    },\r\n    methods: {\r\n        onSelected(file) {\r\n            let img = URL.createObjectURL(file); // fixme: do only for images\r\n\r\n            if (this.editable) {\r\n                this.creating = true;\r\n\r\n                let image = new Image();\r\n                image.onload = () => {\r\n                    if (this.cropperMinWidth && image.width < this.cropperMinWidth) {\r\n                        this.$emit('error:wrong_width', {image});\r\n                    } else if (this.cropperMinHeight && image.height < this.cropperMinHeight) {\r\n                        this.$emit('error:wrong_height', {image});\r\n                    } else {\r\n                        this.cropperMedia = new Media(null, this.collectionName, file.name, file.type, file, img, img);\r\n\r\n                        this.$nextTick(() => {\r\n                            this.$nextTick(() => {\r\n                                this.$refs.cropperModal.show()\r\n                            })\r\n                        })\r\n                    }\r\n                }\r\n                image.src = img;\r\n            } else {\r\n                let media = new Media(null, this.collectionName, file.name, file.type, file, img, img);\r\n                this.onAdded(media);\r\n            }\r\n        },\r\n\r\n        onSave() {\r\n            this.$refs.cropperModal.hide();\r\n\r\n            this.$refs.cropper.getResult(blob => {\r\n                let item = this.blobToMedia(blob, this.cropperMedia);\r\n\r\n                if (this.creating) {\r\n                    this.onAdded(item);\r\n                } else if (this.updating) {\r\n                    this.onEdited(item);\r\n                }\r\n            }, this.mimeType || this.cropperMedia.mime_type);\r\n        },\r\n\r\n        /**\r\n         * @param {Media} media\r\n         */\r\n        onAdded(media) {\r\n            this.items.push(media);\r\n\r\n            this.onCreated(media);\r\n\r\n            if (this.shouldAutoUpload) {\r\n                this.storePendingMedia(media)\r\n                    .then(({pendingMediaId}) => {\r\n                        this.addedItems.push({media, pendingMediaId});\r\n                        this.$emit('uploaded', {media, pendingMediaId});\r\n                    })\r\n                    .catch(error => {\r\n                        // todo: manage properly\r\n                        console.error(error)\r\n                    });\r\n            } else {\r\n                this.addedItems.push({media});\r\n            }\r\n\r\n            this.creating = false;\r\n        },\r\n\r\n        /**\r\n         * @param {Media} media\r\n         */\r\n        onEdited(media) {\r\n            this.items = this.items.map(item => {\r\n                if (item.id === media.id) {\r\n                    item.url = media.url;\r\n                    item.thumbnail = media.thumbnail;\r\n                    item.file = media.file;\r\n                }\r\n                return item;\r\n            });\r\n\r\n            this.onUpdated(media);\r\n\r\n            let previous = this.updatedItems.find(item => item.media.id === media.id);\r\n            if (previous) {\r\n                this.updatedItems = this.updatedItems.map(item => {\r\n                    if (item.media.id === media.id) {\r\n                        item.media = media;\r\n                    }\r\n                    return item;\r\n                });\r\n\r\n                if (this.shouldAutoUpload) {\r\n                    let updatedItem = this.updatedItems.find(item => item.media.id === media.id);\r\n\r\n                    this.updatePendingMedia(updatedItem.media, updatedItem.pendingMediaId)\r\n                        .then(() => {\r\n                            this.updatedItems = this.updatedItems.map(item => {\r\n                                if (item.media.id === media.id) {\r\n                                    item.pendingMediaId = updatedItem.pendingMediaId;\r\n                                }\r\n                                return item;\r\n                            });\r\n                        })\r\n                        .catch(error => {\r\n                            // todo: manage properly\r\n                            console.error(error)\r\n                        });\r\n                }\r\n            } else if (this.shouldAutoUpload) {\r\n                this.storePendingMedia(media)\r\n                    .then(({pendingMediaId}) => {\r\n                        this.updatedItems.push({media: media, pendingMediaId});\r\n                    })\r\n                    .catch(error => {\r\n                        // todo: manage properly\r\n                        console.error(error)\r\n                    });\r\n            } else {\r\n                this.updatedItems.push({media: media});\r\n            }\r\n\r\n            this.updating = false;\r\n        },\r\n\r\n        /**\r\n         * @param {Blob} blob\r\n         * @param {Media} item\r\n         */\r\n        blobToMedia(blob, item) {\r\n            let newItem = item.clone();\r\n\r\n            let file = new File([blob], newItem.file_name, {type: blob.type});\r\n            let url = URL.createObjectURL(blob);\r\n            newItem.url = newItem.thumbnail = url;\r\n            newItem.file = file;\r\n\r\n            return newItem;\r\n        },\r\n\r\n        /**\r\n         * @param {Media} item\r\n         */\r\n        onView(item) {\r\n            let i = this.items.map(v => v.v_id).indexOf(item.v_id);\r\n            this.$emit('view', {media: item, index: i});\r\n        },\r\n        onDownload(item) {\r\n            console.log('onDownload', item);\r\n        },\r\n        onEdit(media) {\r\n            this.updating = true;\r\n            this.cropperMedia = media;\r\n            this.$refs.cropperModal.show();\r\n        },\r\n        onDelete(item) {\r\n            this.$emit('delete', {item, delete: this.delete});\r\n        },\r\n        delete(item) {\r\n            this.items = this.items.filter(mediaItem => {\r\n                return mediaItem.v_id !== item.v_id;\r\n            });\r\n\r\n            let previous;\r\n            if (item.id) {\r\n                this.deletedItems.push({...item});\r\n                previous = this.updatedItems.find(mediaItem => mediaItem.media.v_id === item.v_id);\r\n                this.updatedItems = this.updatedItems.filter(mediaItem => mediaItem.media.v_id !== item.v_id);\r\n            } else {\r\n                previous = this.addedItems.find(mediaItem => mediaItem.media.v_id === item.v_id);\r\n                this.addedItems = this.addedItems.filter(mediaItem => mediaItem.media.v_id !== item.v_id);\r\n            }\r\n\r\n            if (previous && this.shouldAutoUpload) {\r\n                this.deletePendingMedia(previous.pendingMediaId);\r\n            }\r\n\r\n            this.onDeleted(item);\r\n        },\r\n\r\n        /**\r\n         * @param {Object[]} items\r\n         * @return {Media[]}\r\n         */\r\n        mapObjectsToMedia(items) {\r\n            return items.map(item => {\r\n                let m = Media.fromObject(item);\r\n                m.v_id = item.v_id || m.v_id;\r\n                return m;\r\n            })\r\n        },\r\n\r\n        /**\r\n         * Filters \"mediaItems\" param based on collectionName\r\n         * @param {Media[]} mediaItems\r\n         * @return {Media[]}\r\n         */\r\n        filterMedia(mediaItems) {\r\n            return mediaItems.filter(item => item.collection_name === this.collectionName)\r\n        },\r\n\r\n        /**\r\n         * @param {Media} media\r\n         */\r\n        storePendingMedia(media) {\r\n            return new Promise((resolve, reject) => {\r\n                this.uploadingMedia.push({media, progress: 0});\r\n\r\n                let data = new FormData();\r\n                data.set('collection_name', this.collectionName);\r\n                data.set('model_class', this.uploadModelClass);\r\n                data.set('media[file]', media.file);\r\n\r\n                let config = {\r\n                    onUploadProgress: (progressEvent) => this.onUploadProgress(media, progressEvent),\r\n                };\r\n\r\n                this.axios\r\n                    .post(this.pendingStoreUrl, data, config)\r\n                    .then(({data}) => {\r\n                        this.removeUploadingMedia(media);\r\n                        resolve({pendingMediaId: data.id});\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(error);\r\n                        reject(error);\r\n                    });\r\n            })\r\n        },\r\n\r\n        /**\r\n         * @param {Media} media\r\n         * @param {Number} pendingMediaId\r\n         */\r\n        updatePendingMedia(media, pendingMediaId) {\r\n            return new Promise((resolve, reject) => {\r\n                this.uploadingMedia.push({media, progress: 0});\r\n\r\n                let data = new FormData();\r\n                data.set('_method', 'PUT'); // we cannot send 'multipart/form-data' wit PUT request method\r\n                data.set('collection_name', this.collectionName);\r\n                data.set('model_class', this.uploadModelClass);\r\n                data.set('media[file]', media.file);\r\n\r\n                let config = {\r\n                    onUploadProgress: (progressEvent) => this.onUploadProgress(media, progressEvent),\r\n                };\r\n\r\n                this.axios\r\n                    .post(this.pendingUpdateUrl.replace('{id}', `${pendingMediaId}`), data, config)\r\n                    .then(({data}) => {\r\n                        resolve(data);\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(error);\r\n                        reject(error);\r\n                    });\r\n            })\r\n        },\r\n\r\n        /**\r\n         * @param {Number} pendingMediaId\r\n         */\r\n        deletePendingMedia(pendingMediaId) {\r\n            return new Promise((resolve, reject) => {\r\n                this.axios\r\n                    .delete(this.pendingDeleteUrl.replace('{id}', `${pendingMediaId}`))\r\n                    .then(({data}) => {\r\n                        resolve(data);\r\n                    })\r\n                    .catch(error => {\r\n                        console.error(error);\r\n                        reject(error);\r\n                    });\r\n            })\r\n        },\r\n\r\n        onUploadProgress(media, progressEvent) {\r\n            const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\r\n\r\n            if (totalLength !== null) {\r\n                this.updateProgressValue(media, Math.round((progressEvent.loaded * 100) / totalLength));\r\n            }\r\n        },\r\n\r\n        updateProgressValue(media, value) {\r\n            this.uploadingMedia = this.uploadingMedia.map(item => {\r\n                if (item.media.v_id === media.v_id) {\r\n                    item.progress = value;\r\n                }\r\n                return item;\r\n            })\r\n        },\r\n\r\n        removeUploadingMedia(media) {\r\n            this.uploadingMedia = this.uploadingMedia.filter(item => item.media.v_id !== media.v_id)\r\n        },\r\n\r\n        /**\r\n         *\r\n         * @param {FormData} formData\r\n         */\r\n        fillFormData(formData) {\r\n            this.addedItems.forEach(item => {\r\n                if (item.pendingMediaId !== undefined) {\r\n                    formData.append(`media[store][${this.collectionName}][][pending_media_id]`, item.pendingMediaId);\r\n                } else {\r\n                    formData.append(`media[store][${this.collectionName}][][file]`, item.media.file);\r\n                }\r\n            });\r\n\r\n            this.updatedItems.forEach((item, index) => {\r\n                formData.set(`media[update][${index}][id]`, item.media.id);\r\n                if (item.pendingMediaId !== undefined) {\r\n                    formData.set(`media[update][${index}][pending_media_id]`, item.pendingMediaId);\r\n                } else {\r\n                    formData.set(`media[update][${index}][file]`, item.media.file);\r\n                }\r\n            });\r\n\r\n            this.deletedItems.forEach(item => {\r\n                formData.append('media[delete][]', item.id);\r\n            });\r\n        },\r\n        onCreated(item) {\r\n            this.$emit('created', item);\r\n            this.$emit('input', this.items);\r\n        },\r\n        onUpdated(item) {\r\n            this.$emit('updated', item);\r\n            this.$emit('input', this.items);\r\n        },\r\n        onDeleted(item) {\r\n            this.$emit('deleted', item);\r\n            this.$emit('input', this.items);\r\n        },\r\n    },\r\n    computed: {\r\n        pendingStoreUrl() {\r\n            return `${this.uploadBaseUrl}/laravel-media-library/pending`;\r\n        },\r\n        pendingUpdateUrl() {\r\n            return `${this.uploadBaseUrl}/laravel-media-library/pending/{id}`;\r\n        },\r\n        pendingDeleteUrl() {\r\n            return `${this.uploadBaseUrl}/laravel-media-library/pending/{id}`;\r\n        },\r\n        shouldAutoUpload() {\r\n            return this.uploadBaseUrl !== undefined && this.uploadModelClass !== undefined;\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n</style>\r\n","// Import vue component\r\nimport MediaLibrary from './components/MediaLibrary.vue';\r\n\r\n// Declare install function executed by Vue.use()\r\nfunction install(Vue) {\r\n    if (install.installed) return;\r\n    install.installed = true;\r\n    Vue.component('media-library', MediaLibrary);\r\n}\r\n\r\n// Create module definition for Vue.use()\r\nconst plugin = {\r\n    install,\r\n};\r\n\r\n// Auto-install when vue is found (eg. in browser via <script> tag)\r\nlet GlobalVue = null;\r\nif (typeof window !== 'undefined') {\r\n    GlobalVue = window.Vue;\r\n} else if (typeof global !== 'undefined') {\r\n    GlobalVue = global.Vue;\r\n}\r\nif (GlobalVue) {\r\n    GlobalVue.use(plugin);\r\n}\r\n\r\n// To allow use as module (npm/webpack/etc.) export component\r\nexport default MediaLibrary;\r\n"],"names":["const","let","MediaLibrary"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAxEA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC2BAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAvJA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA,WAAe;AACf,IAAI,KAAK,EAAE;AACX,QAAQ,KAAK,EAAE;AACf,YAAY,IAAI,EAAE,KAAK;AACvB,YAAY,2BAAO,GAAG;AACtB,gBAAgB,OAAO,EAAE;AACzB,aAAa;AACb,SAAS;AACT,QAAQ,QAAQ,EAAE;AAClB,YAAY,IAAI,EAAE,OAAO;AACzB,YAAY,OAAO,EAAE,KAAK;AAC1B,SAAS;AACT,QAAQ,cAAc,EAAE;AACxB,YAAY,IAAI,EAAE,KAAK;AACvB,YAAY,2BAAO,GAAG;AACtB,gBAAgB,OAAO,EAAE,CAAC;AAC1B,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC;;;;AC4BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA7FA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;;AAEA;AACA;AACA;AACA;;;AAtDA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAxCA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkBA;AACA;AACA;AACA;AACA;;;AAxBA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACA;;AAEA;;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA1iBA,AAEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA,AACA;AACA;AACA,SAAS,OAAO,CAAC,GAAG,EAAE;AACtB,IAAI,IAAI,OAAO,CAAC,SAAS,IAAE,SAAO;AAClC,IAAI,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;AAC7B,IAAI,GAAG,CAAC,SAAS,CAAC,eAAe,EAAEE,mBAAY,CAAC,CAAC;AACjD,CAAC;AACD;AACA;AACAF,IAAM,MAAM,GAAG;AACf,aAAI,OAAO;AACX,CAAC,CAAC;AACF;AACA;AACAC,IAAI,SAAS,GAAG,IAAI,CAAC;AACrB,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AACnC,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC;AAC3B,CAAC,MAAM,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AAC1C,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC;AAC3B,CAAC;AACD,IAAI,SAAS,EAAE;AACf,IAAI,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC1B,CAAC;;;;"}